(function(){"use strict";var scripts=document.getElementsByTagName("script");var currentScriptPath=scripts[scripts.length-1].src;if(currentScriptPath.length==0){currentScriptPath=window.installPath+"/mv-angular-usuarios/includes/mv-usuarios.php"}angular.module("mvUsuarios",[]).config(function Config($httpProvider,jwtInterceptorProvider){jwtInterceptorProvider.tokenGetter=[function(){return localStorage.getItem(window.app)}];$httpProvider.interceptors.push("jwtInterceptor")}).run(function($rootScope,jwtHelper,$location,UserVars){$rootScope.$on("$routeChangeStart",function(e,to){if(to&&to.data&&to.data.requiresLogin){if(!localStorage.getItem(window.app)){e.preventDefault();$location.path(UserVars.loginPath)}}})}).factory("UserService",UserService).service("UserVars",UserVars).component("usuarioLogin",usuarioLogin()).component("usuarioLogout",usuarioLogout());function usuarioLogin(){return{bindings:{showSucursales:"<",showCajas:"<",redirect:"=",social:"<",register:"<"},templateUrl:window.installPath+"/mv-angular-usuarios/mv-usuarios-login.html",controller:MvLoginController}}MvLoginController.$inject=["UserService","$location","$rootScope","SucursalesService"];function MvLoginController(UserService,$location,$rootScope,SucursalesService){var vm=this;vm.email="";vm.password="";vm.sucursal={sucursal_id:2};vm.caja={caja_id:1};vm.dir=vm.redirect==undefined?"/":vm.redirect;vm.login=login;vm.loginFacebook=loginFacebook;vm.loginGoogle=loginGoogle;SucursalesService.get().then(function(data){vm.sucursales=data;vm.sucursal=data[0];vm.caja=vm.sucursal.cajas!=undefined?vm.sucursal.cajas[0]:{}});function login(){UserService.login(vm.email,vm.password,vm.sucursal.sucursal_id,vm.caja.caja_id).then(function(data){if(data.status==200){$rootScope.$broadcast("login-success");$location.path(vm.dir)}else{$rootScope.$broadcast("login-error")}})}function loginFacebook(){UserService.loginFacebook(function(data){$location.path(vm.dir)})}function loginGoogle(){UserService.loginGoogle(function(data){$location.path(vm.dir)})}}function usuarioLogout(){return{bindings:{redirect:"="},template:'<img class="btn-img" style="margin: 5px;" src="images/logout.ico" ng-click="$ctrl.logout()" width="30" height="30">',controller:MvLogoutController}}MvLogoutController.$inject=["UserService","$rootScope","$timeout"];function MvLogoutController(UserService,$rootScope,$timeout){var vm=this;$timeout(function(){vm.dir=vm.redirect==undefined?"/logout":vm.redirect;vm.logout=logout;function logout(){UserService.logout(vm.dir).then(function(data){$rootScope.$broadcast("login-error");console.log(data)})}},100)}UserService.$inject=["$http","UserVars","$cacheFactory","MvUtils","jwtHelper","auth","ErrorHandler","$q","$location","MvUtilsGlobals"];function UserService($http,UserVars,$cacheFactory,MvUtils,jwtHelper,auth,ErrorHandler,$q,$location,MvUtilsGlobals){var service={};var url=currentScriptPath.replace("mv-usuarios.js","/includes/mv-usuarios.php");service.getLogged=getLogged;service.getFromToken=getFromToken;service.setLogged=setLogged;service.checkLastLogin=checkLastLogin;service.create=create;service.createFromSocial=createFromSocial;service.remove=remove;service.update=update;service.get=get;service.save=save;service.getDeudores=getDeudores;service.getDeudorById=getDeudorById;service.getById=getById;service.getByParams=getByParams;service.login=login;service.loginSocial=loginSocial;service.loginFacebook=loginFacebook;service.loginGoogle=loginGoogle;service.logout=logout;service.userExist=userExist;service.forgotPassword=forgotPassword;service.changePassword=changePassword;return service;function save(usuario){var deferred=$q.defer();if(usuario.usuario_id!=undefined){deferred.resolve(update(usuario))}else{deferred.resolve(create(usuario))}return deferred.promise}function getDeudorById(id,callback){getDeudores(function(data){var response=data.filter(function(elem,index,array){return id=elem.usuario_id})[0];callback(response)})}function getDeudores(){return $http.post(url,{"function":"getDeudores"}).then(function(data){return data}).catch(function(data){ErrorHandler(data)})}function getByParams(params,values,exact_match){return get().then(function(data){return MvUtils.getByParams(params,values,exact_match,data)}).then(function(data){return data})}function remove(usuario_id,callback){return $http.post(url,{"function":"remove",usuario_id:usuario_id}).success(function(data){if(data!=="false"){UserVars.clearCache=true;callback(data)}}).error(function(data){callback(data)})}function get(rol_id){MvUtilsGlobals.startWaiting();var urlGet=url+"?function=get&rol_id="+rol_id;var $httpDefaultCache=$cacheFactory.get("$http");var cachedData=[];if($httpDefaultCache.get(urlGet)!=undefined){if(UserVars.clearCache){$httpDefaultCache.remove(urlGet)}else{var deferred=$q.defer();cachedData=$httpDefaultCache.get(urlGet);deferred.resolve(cachedData);MvUtilsGlobals.stopWaiting();return deferred.promise}}return $http.get(urlGet,{cache:true}).then(function(response){$httpDefaultCache.put(urlGet,response.data);UserVars.clearCache=false;UserVars.paginas=response.data.length%UserVars.paginacion==0?parseInt(response.data.length/UserVars.paginacion):parseInt(response.data.length/UserVars.paginacion)+1;MvUtilsGlobals.stopWaiting();return response.data}).catch(function(response){MvUtilsGlobals.stopWaiting();ErrorHandler(response)})}function getById(id,callback){get(function(data){var response=data.filter(function(elem,index,array){return elem.usuario_id==id})[0];callback(response)})}function checkLastLogin(){}function userExist(mail,callback){return $http.post(url,{"function":"userExist",mail:mail}).success(function(data){callback(data)}).error(function(data){})}function logout(path){return $http.post(url,{"function":"logout"}).then(function(response){localStorage.removeItem(window.app);UserVars.clearCache=true;$location.path(path);return response.data}).catch(function(response){ErrorHandler(response)})}function login(mail,password,sucursal_id,caja_id){return $http.post(url,{"function":"login",mail:mail,password:password,sucursal_id:sucursal_id,caja_id:caja_id}).then(function(response){localStorage.setItem(window.app,response.data.token);response.data.status=response.status;return response.data}).catch(function(response){console.log(response);ErrorHandler(response);return response})}function loginSocial(user,token){$http.post(url,{"function":"loginSocial",token:token,user:JSON.stringify(user)}).success(function(data){if(data!=-1){localStorage.setItem(window.app,data.token)}callback_social(data)}).error(function(data){callback_social(data)})}var callback_social=function(data){};function loginFacebook(callback){callback_social=callback;auth.signin({popup:true,connections:["facebook"],scope:"openid name email"},onLoginSuccess,onLoginFailed)}function loginGoogle(callback){callback_social=callback;auth.signin({popup:true,connections:["google-oauth2"],scope:"openid name email"},onLoginSuccess,onLoginFailed)}function onLoginSuccess(profile,token){userExist(profile.email,function(data){if(data>0){var user={mail:profile.email};$http.post(url,{"function":"loginSocial",token:token,user:JSON.stringify(user)}).success(function(data){if(data!=-1){localStorage.setItem(window.app,data.token)}callback_social(data)}).error(function(data){callback_social(data)})}else{UserVars.user_social=profile;UserVars.token_social=token;callback_social(data)}})}function onLoginFailed(data){callback_social(data)}function createFromSocial(usuario){return $http.post(url,{"function":"create",user:JSON.stringify(usuario)}).then(function(response){UserVars.clearCache=true;return response.data}).error(function(response){UserVars.clearCache=true;ErrorHandler(response.data)})}function create(usuario){return $http.post(url,{"function":"create",user:JSON.stringify(usuario)}).then(function(response){UserVars.clearCache=true;return response.data}).catch(function(response){UserVars.clearCache=true;ErrorHandler(response)})}function getLogged(){}function getFromToken(){var globals=localStorage.getItem(window.app);if(globals!==undefined&&globals!==null){return jwtHelper.decodeToken(globals)}else{logout("/login");return false}}function setLogged(user){}function changePassword(usuario_id,pass_old,pass_new,callback){return $http.post(url,{"function":"changePassword",usuario_id:usuario_id,pass_old:pass_old,pass_new:pass_new}).success(function(data){UserVars.clearCache=true;callback(data)}).error(function(data){callback(data)})}function update(usuario){return $http.post(url,{"function":"update",user:JSON.stringify(usuario)}).then(function(response){UserVars.clearCache=true;return response.data}).catch(function(response){UserVars.clearCache=true;ErrorHandler(response)})}function forgotPassword(email,callback){return $http.post(url,{"function":"forgotPassword",email:email}).success(function(data){callback(data)}).error(function(data){callback(data)})}}UserVars.$inject=[];function UserVars(){this.paginas=1;this.pagina=1;this.paginacion=10;this.start=0;this.user_social={};this.token_social="";this.all=false;this.clearCache=true;this.loginPath="/login"}})();